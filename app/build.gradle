apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

ext {
    compatLibVersion = '27.1.0'
    constraintLayoutVersion = '1.0.2'
    crashlyticsVersion = '2.9.1@aar'
    moxyVersion = '1.5.3'
    daggerVersion = '2.5'
    roomVersion = '1.0.0'
    rxAndroidVersion = '1.2.1'
    rxJavaVersion = '1.1.6'
    retrofitVersion = '2.3.0'
    converterGsonVersion = '2.1.0'
    adapterRxJavaVersion = '2.1.0'
    picassoVersion = '2.5.2'
    ormliteVersion = '4.48'
    dropboxCoreSdkVersion = '2.1.1'
    mockitoVersion = '2.13.0'
    mockitoKotlinVersion = '1.5.0'
    junitVersion = '4.12'
    kluentVersion = '1.35'
    espressoCoreVersion = '2.2.2'
}

def propertiesFile = rootProject.file('local.properties')
def properties = new Properties()
properties.load(new FileInputStream(propertiesFile))

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        multiDexEnabled true
        applicationId "ru.mamykin.foboreader"
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 2
        versionName "1.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            keyAlias properties['keyAlias']
            keyPassword properties['keyPassword']
            storeFile file(properties['storeFile'])
            storePassword properties['storePassword']
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix 'd'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation "android.arch.persistence.room:runtime:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"

    implementation "com.arello-mobile:moxy:$moxyVersion"
    implementation "com.arello-mobile:moxy-app-compat:$moxyVersion"
    kapt "com.arello-mobile:moxy-compiler:$moxyVersion"

    implementation "io.reactivex:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex:rxjava:$rxJavaVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava:$retrofitVersion"
    implementation "com.squareup.picasso:picasso:$picassoVersion"

    implementation "com.android.support:cardview-v7:$compatLibVersion"
    implementation "com.android.support:design:$compatLibVersion"
    implementation "com.android.support:appcompat-v7:$compatLibVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    implementation "com.j256.ormlite:ormlite-android:$ormliteVersion"
    implementation "com.dropbox.core:dropbox-core-sdk:$dropboxCoreSdkVersion"
    implementation("com.crashlytics.sdk.android:crashlytics:$crashlyticsVersion") {
        transitive = true
    }

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.amshove.kluent:kluent:$kluentVersion"

    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espressoCoreVersion")
}