package ru.mamykin.foboreader

object Versions {
    const val roomVersion = "2.6.1"
    const val coroutinesVersion = "1.3.2"
    const val retrofitVersion = "2.3.0"
    const val okHttpVersion = "4.9.0"
    const val mockkVersion = "1.13.16"
    const val junitVersion = "4.12"
    const val multidexVersion = "2.0.1"
    const val coreKtxVersion = "1.0.2"
    const val androidxVersion = "1.1.0"
    const val fragmentxVersion = "1.6.2"
    const val retrofitCoroutinesAdapterVersion = "0.9.2"
    const val retrofitLoggingInterceptorVersion = "4.3.0"
    const val espressoCoreVersion = "3.1.1"
    const val leakcanaryVersion = "2.14"
    const val leakcanaryNoOpVersion = "1.5.2"
    const val hiltVersion = "2.54"
    const val hiltNavigationVersion = "1.2.0"
    const val lifecycleVersion = "2.4.1"
    const val lottieVersion = "4.2.2"
    const val composeVersion = "1.7.6"
    const val composeActivityVersion = "1.8.2"
    const val coilVersion = "2.2.2"
    const val composeNavigationVersion = "2.8.4"
    const val kotlinSerializationVersion = "1.5.1"
    const val composeMaterial = "1.2.0"
    const val accompanist = "0.32.0"
}

object Dependencies {
    const val activityX = "androidx.activity:activity:${Versions.androidxVersion}"
    const val fragmentX = "androidx.fragment:fragment:${Versions.fragmentxVersion}"
    const val appCompatX = "androidx.appcompat:appcompat:${Versions.androidxVersion}"
    const val coreKtx = "androidx.core:core-ktx:${Versions.coreKtxVersion}"
    const val coroutinesCore = "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.coroutinesVersion}"
    const val coroutinesAndroid = "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Versions.coroutinesVersion}"
    const val coroutinesTest = "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Versions.coroutinesVersion}"
    const val roomRuntime = "androidx.room:room-runtime:${Versions.roomVersion}"
    const val roomKtx = "androidx.room:room-ktx:${Versions.roomVersion}"
    const val roomCompiler = "androidx.room:room-compiler:${Versions.roomVersion}"
    const val retrofit = "com.squareup.retrofit2:retrofit:${Versions.retrofitVersion}"
    const val okio = "com.squareup.okio:okio:${Versions.retrofitVersion}"
    const val okHttp = "com.squareup.okhttp3:okhttp:${Versions.okHttpVersion}"
    const val retrofitGsonConverter = "com.squareup.retrofit2:converter-gson:${Versions.retrofitVersion}"
    const val retrofitCoroutinesAdapter =
        "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${Versions.retrofitCoroutinesAdapterVersion}"
    const val retrofitLoggingInterceptor =
        "com.squareup.okhttp3:logging-interceptor:${Versions.retrofitLoggingInterceptorVersion}"
    const val junit = "junit:junit:${Versions.junitVersion}"
    const val mockk = "io.mockk:mockk:${Versions.mockkVersion}"
    const val espressoCore = "androidx.test.espresso:espresso-core:${Versions.espressoCoreVersion}"
    const val multidex = "androidx.multidex:multidex:${Versions.multidexVersion}"
    const val leakcanary = "com.squareup.leakcanary:leakcanary-android:${Versions.leakcanaryVersion}"
    const val leakcanaryNoOp = "com.squareup.leakcanary:leakcanary-android-no-op:${Versions.leakcanaryNoOpVersion}"
    const val hilt = "com.google.dagger:hilt-android:${Versions.hiltVersion}"
    const val hiltCompiler = "com.google.dagger:hilt-compiler:${Versions.hiltVersion}"
    const val hiltNavigation = "androidx.hilt:hilt-navigation-compose:${Versions.hiltNavigationVersion}"
    const val lifecycleRuntimeKtx = "androidx.lifecycle:lifecycle-runtime-ktx:${Versions.lifecycleVersion}"
    const val lifecycleViewModelKtx = "androidx.lifecycle:lifecycle-viewmodel-ktx:${Versions.lifecycleVersion}"
    const val lottie = "com.airbnb.android:lottie:${Versions.lottieVersion}"
    const val runtimeLiveData = "androidx.compose.runtime:runtime-livedata:${Versions.composeVersion}"
    const val composeUi = "androidx.compose.ui:ui:${Versions.composeVersion}"
    const val composeTooling = "androidx.compose.ui:ui-tooling:${Versions.composeVersion}"
    const val composeFoundation = "androidx.compose.foundation:foundation:${Versions.composeVersion}"
    const val composeMaterial3 = "androidx.compose.material3:material3:${Versions.composeMaterial}"
    const val composeMaterialIconsCore = "androidx.compose.material:material-icons-core:${Versions.composeVersion}"
    const val composeMaterialIconsExt = "androidx.compose.material:material-icons-extended:${Versions.composeVersion}"
    const val composeActivity = "androidx.activity:activity-compose:${Versions.composeActivityVersion}"
    const val composeToolingPreview = "androidx.compose.ui:ui-tooling-preview:${Versions.composeVersion}"
    const val coil = "io.coil-kt:coil-compose:${Versions.coilVersion}"
    const val composeNavigation = "androidx.navigation:navigation-compose:${Versions.composeNavigationVersion}"
    const val navigationFragment = "androidx.navigation:navigation-fragment-ktx:${Versions.composeNavigationVersion}"
    const val navigationUi = "androidx.navigation:navigation-ui-ktx:${Versions.composeNavigationVersion}"
    const val kotlinSerialization =
        "org.jetbrains.kotlinx:kotlinx-serialization-json:${Versions.kotlinSerializationVersion}"
    const val accompanist = "com.google.accompanist:accompanist-systemuicontroller:${Versions.accompanist}"
}